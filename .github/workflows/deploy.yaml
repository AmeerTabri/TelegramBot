name: polybot Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REPO_URL: ${{ github.server_url }}/${{ github.repository }}.git
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  Deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/private_key
          chmod 600 ~/.ssh/private_key
          cat > ~/.ssh/config << EOF
          Host ec2
              HostName $EC2_HOST
              User $EC2_USERNAME
              IdentityFile ~/.ssh/private_key
              StrictHostKeyChecking no
          EOF

      - name: Create .env.prod from secrets and constants
        run: |
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" > .env.prod
          echo "AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}" >> .env.prod
          echo "BOT_APP_URL=https://ameer.fursa.click" >> .env.prod
          echo "EC2_YOLO=10.0.1.171" >> .env.prod
          echo "AWS_REGION=us-east-1" >> .env.prod

      - name: Copy repo to EC2
        run: |
          ssh ec2 "if [ -d ~/${REPO_NAME} ]; then cd ~/${REPO_NAME} && git fetch origin main && git checkout main && git reset --hard origin/main; else git clone --branch main ${REPO_URL} ~/${REPO_NAME}; fi"

      - name: Execute deploy script on EC2
        run: |
          ssh ec2 "cd $REPO_NAME && bash deploy.sh"
